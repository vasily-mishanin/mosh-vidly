{"version":3,"sources":["services/fakeGenreService.js","services/fakeMovieService.js","components/Like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/MoviesTable.jsx","components/Pagination.jsx","components/ListGroup.jsx","components/searchBox.jsx","components/Movies.jsx","utilities/pagination.js","components/Customers.jsx","components/Rentals.jsx","components/common/notFoundPage.jsx","components/NavBar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/MovieForm.jsx","components/loginForm.jsx","components/registerForm.jsx","App.js","serviceWorker.js","index.js"],"names":["genres","_id","name","getGenres","filter","g","movies","title","genre","numberInStock","dailyRentalRate","publishDate","saveMovie","movie","movieInDb","find","m","genresAPI","genreId","Date","now","toString","push","Like","props","likeClass","liked","console","log","className","style","cursor","onClick","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","columns","this","map","key","lable","Component","TableBody","renderCell","item","content","_","get","createKey","row","data","Table","MoviesTable","to","onLike","onDelete","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","ListGroup","items","selectedItem","itemKey","itemText","onItemChange","itemClass","defaultProps","SearchBox","value","onChange","type","placeholder","e","currentTarget","Movies","state","currentGenre","searchQuery","handleDelete","movieToDelete","updatedMovies","setState","handleLike","likedMovie","newMovies","index","indexOf","handlePageChange","handleGenreChange","handleSearch","query","handleSort","getPagedData","allMovies","length","filteredMovies","toLowerCase","startsWith","sortedMovies","orderBy","startIndex","endIndex","slice","paginate","count","allGenres","Fragment","Customers","Rentals","NotFoundPage","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeclassname","Input","label","error","focus","rest","htmlFor","autoFocus","Select","options","option","Form","errors","validate","result","Joi","schema","abortEarly","details","message","validateProperty","input","obj","handleSubmit","preventDefault","newErrors","doSubmit","handleChange","event","errorMessage","newAccount","disabled","MovieForm","string","required","number","min","max","history","replace","movieId","match","params","mapToViewModel","action","onSubmit","renderInput","renderSelect","renderButton","LoginForm","username","password","React","createRef","RegisterForm","email","nickname","alphanum","App","component","from","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.eda0f16c.chunk.js","sourcesContent":["export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6febccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5,\n  },\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find((m) => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find((m) => m._id === movie._id) || {};\n  movieInDb.title = movie.title;\n  movieInDb.genre = genresAPI.genres.find((g) => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now().toString();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find((m) => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from \"react\";\r\n\r\n// In: liked or not?\r\n// Out: liked, unliked\r\nfunction Like(props) {\r\n    let likeClass = \"fa-heart\";\r\n    props.movie.liked ? (likeClass += \" fas pink\") : (likeClass += \" far\");\r\n    console.log(\"Like Rendered\");\r\n    return <i className={likeClass} style={{ cursor: \"pointer\" }} onClick={() => props.onClick()}></i>;\r\n}\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    let sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\" />;\r\n  };\r\n\r\n  render() {\r\n    const { columns } = this.props;\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {columns.map((column) => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}>\r\n              {column.lable} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  //item i.e. row of the table\r\n  renderCell = (item, column) => {\r\n    /* takes item and returns item's value by path or content=>ReactElement (like, delete button)*/\r\n    return column.content ? column.content(item) : _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (row, column) => {\r\n    return row._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React, { Component } from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = (props) => {\r\n  const { data, columns, sortColumn, onSort } = props;\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody data={data} columns={columns} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Like from \"./Like\";\r\nimport Table from \"./common/table\";\r\n\r\nclass MoviesTable extends Component {\r\n  // path means how to get to exact property value inside movies\r\n  // each column is an object which contains a path to certain property of movie object\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      lable: \"Title\",\r\n      content: (movie) => (\r\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n      ),\r\n    },\r\n    { path: \"genre.name\", lable: \"Genre\" },\r\n    { path: \"numberInStock\", lable: \"Stock\" },\r\n    { path: \"dailyRentalRate\", lable: \"Rate\" },\r\n    {\r\n      path: \"liked\",\r\n      key: \"like\",\r\n      content: (movie) => (\r\n        <Like movie={movie} onClick={() => this.props.onLike(movie)} />\r\n      ),\r\n    },\r\n    {\r\n      key: \"delete\",\r\n      content: (movie) => (\r\n        <button\r\n          className=\"btn btn-danger btn-sm m-2\"\r\n          onClick={() => this.props.onDelete(movie)}>\r\n          Delete\r\n        </button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        data={movies}\r\n        columns={this.columns}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nlet Pagination = (props) => {\r\n  //destructuring\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\r\n  let pagesCount = Math.ceil(itemsCount / pageSize);\r\n  //if no Pagination needed\r\n  if (pagesCount === 1) {\r\n    return null;\r\n  }\r\n  // else create array of pages titles (using lodash)\r\n  let pages = _.range(1, pagesCount + 1); // returns [1,2,3,...pagecount+1]\r\n  //console.log(pages);\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map(function (page) {\r\n          return (\r\n            <li\r\n              key={page}\r\n              className={\r\n                page === currentPage ? \"page-item active\" : \"page-item\"\r\n              }>\r\n              <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n                {page}\r\n              </a>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\n//checking types of props\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//interface:\r\n//In: checked ?\r\n//Out: checked genre\r\n\r\nlet ListGroup = (props) => {\r\n  const { items, selectedItem, itemKey, itemText, onItemChange } = props;\r\n  const itemClass = \"list-group-item\";\r\n\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => {\r\n        return (\r\n          <li\r\n            key={item[itemKey]}\r\n            className={\r\n              selectedItem === item ? itemClass + \" active\" : itemClass\r\n            }\r\n            onClick={() => onItemChange(item)}>\r\n            {item[itemText]}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\n//set default properties for this component\r\nListGroup.defaultProps = {\r\n  itemText: \"name\",\r\n  itemKey: \"_id\",\r\n};\r\n\r\n//checking porps types\r\nListGroup.propTypes = {\r\n  itemText: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"query\"\r\n        className=\"form-control my-3\"\r\n        placeholder=\"Search...\"\r\n        value={value}\r\n        onChange={(e) => onChange(e.currentTarget.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport MoviesTable from \"./MoviesTable\";\r\nimport Pagination from \"./Pagination\";\r\nimport { paginate } from \"../utilities/pagination.js\";\r\nimport ListGroup from \"./ListGroup\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBox from \"./searchBox\";\r\nimport _ from \"lodash\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    pageSize: 3,\r\n    currentPage: 1,\r\n    currentGenre: null,\r\n    searchQuery: \"\",\r\n    sortColumn: {\r\n      path: \"title\",\r\n      order: \"asc\",\r\n    },\r\n  };\r\n\r\n  // Just to See Lifecycle HOOKS\r\n  constructor() {\r\n    super();\r\n    console.log(\"Construction..\");\r\n  }\r\n  //MOUNTING and setting the State\r\n  componentDidMount() {\r\n    console.log(\"Movies - Mounted\");\r\n    let genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\r\n    this.setState({\r\n      movies: getMovies(),\r\n      genres,\r\n      currentGenre: genres[0],\r\n    });\r\n  }\r\n  componentDidUpdate() {\r\n    console.log(\"Movies-Updated\");\r\n  }\r\n  componentWillUnmount() {\r\n    console.log(\"Movies-Unmounted\");\r\n  }\r\n\r\n  // handeling events\r\n  handleDelete = (movieToDelete) => {\r\n    const updatedMovies = this.state.movies.filter(function (movie) {\r\n      return movie._id !== movieToDelete._id;\r\n    });\r\n    this.setState({\r\n      movies: updatedMovies,\r\n    });\r\n  };\r\n\r\n  handleLike = (likedMovie) => {\r\n    let newMovies = [...this.state.movies];\r\n    let index = newMovies.indexOf(likedMovie);\r\n    newMovies[index].liked = !newMovies[index].liked; // !undefined = true, !true = false\r\n    this.setState({\r\n      movies: newMovies,\r\n    });\r\n  };\r\n\r\n  // arrow => functions are not rebind \"this\"\r\n  handlePageChange = (page) => {\r\n    console.log(page);\r\n    this.setState({\r\n      currentPage: page,\r\n    });\r\n  };\r\n\r\n  handleGenreChange = (genre) => {\r\n    //alert(genre.name);\r\n    this.setState({\r\n      searchQuery: \"\",\r\n      currentGenre: genre,\r\n      currentPage: 1,\r\n    });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({ searchQuery: query, currentGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  //Filtering->Sorting->Paginating\r\n  getPagedData = () => {\r\n    const {\r\n      movies: allMovies,\r\n      currentGenre,\r\n      searchQuery,\r\n      currentPage,\r\n      sortColumn,\r\n      pageSize,\r\n    } = this.state;\r\n    console.log(allMovies.length);\r\n    //FILTERING\r\n    //if it is no query, genre and genre._id  then all movies\r\n    let filteredMovies = allMovies;\r\n    if (searchQuery) {\r\n      filteredMovies = allMovies.filter((movie) =>\r\n        movie.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else if (currentGenre && currentGenre._id) {\r\n      filteredMovies = allMovies.filter(\r\n        (movie) => movie.genre._id === currentGenre._id\r\n      );\r\n    }\r\n    console.log(filteredMovies.length);\r\n\r\n    //SORTING\r\n    const sortedMovies = _.orderBy(\r\n      filteredMovies,\r\n      [sortColumn.path],\r\n      [sortColumn.order]\r\n    );\r\n    console.log(sortedMovies.length);\r\n\r\n    //PAGINATION of movies TO SHOW on current page\r\n    const movies = paginate(sortedMovies, currentPage, pageSize);\r\n    console.log(movies.length);\r\n    return { movies, count: filteredMovies.length };\r\n  };\r\n\r\n  //RENDER (each time when the state is changing)\r\n  render() {\r\n    //alert(this.state.currentGenre);\r\n    console.log(\"Movies-Rendered\");\r\n    //destructuring of \"state\" object\r\n    let { length: count } = this.state.movies; // count = [movies].length (movies=[]={,,,,length:,})\r\n    const {\r\n      genres: allGenres,\r\n      pageSize,\r\n      currentPage,\r\n      currentGenre,\r\n      searchQuery,\r\n      sortColumn,\r\n    } = this.state;\r\n    //console.log(movies);\r\n    // if there is no movies\r\n    if (count === 0) return <h3> There is no movies in database </h3>;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <ListGroup\r\n              items={allGenres}\r\n              selectedItem={currentGenre}\r\n              onItemChange={this.handleGenreChange}\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            <Link\r\n              to=\"/movies/new\"\r\n              className=\"btn btn-primary btn-lg btn-new-movie\">\r\n              New Movie\r\n            </Link>\r\n\r\n            <h3>\r\n              Showing <strong> {this.getPagedData().count} </strong> movies from\r\n              the database\r\n            </h3>\r\n\r\n            <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n\r\n            <MoviesTable\r\n              movies={this.getPagedData().movies}\r\n              sortColumn={sortColumn}\r\n              onLike={this.handleLike}\r\n              onDelete={this.handleDelete}\r\n              onSort={this.handleSort}\r\n            />\r\n            <Pagination\r\n              itemsCount={this.getPagedData().count}\r\n              pageSize={pageSize}\r\n              currentPage={currentPage}\r\n              onPageChange={this.handlePageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","//import _ from \"lodash\";\r\n\r\nexport function paginate(items, currentPage, pageSize) {\r\n  const startIndex = pageSize * (currentPage - 1);\r\n  const endIndex = startIndex + pageSize;\r\n  //return _(items).slice(startIndex).take(pageSize).value();\r\n  //or with vanilla JS\r\n  return items.slice(startIndex, endIndex);\r\n}\r\n","import React from \"react\";\r\n\r\nconst Customers = (props) => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nconst Rentals = (props) => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\n\r\nconst NotFoundPage = () => {\r\n  return <h1>Page Not Found</h1>;\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Vidly\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink className=\"nav-item  nav-link\" to=\"/movies\">\r\n            Movies\r\n          </NavLink>\r\n          <NavLink\r\n            activeclassname=\"active\"\r\n            className=\"nav-item  nav-link\"\r\n            to=\"/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-item  nav-link\" to=\"/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n          <NavLink className=\"nav-item  nav-link\" to=\"/login\">\r\n            Login\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/register\">\r\n            Register\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst Input = (props) => {\r\n  //destruct only parameters wich you use in the Component specifically\r\n  const { name, label, error, focus = false, ...rest } = props;\r\n  //rest is for such parameters as onChange={onChange}, value={value}, type={type}\r\n  //...rest has not name, label, error and focus\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        {...rest}\r\n        name={name}\r\n        className=\"form-control\"\r\n        id={name}\r\n        autoFocus={focus}\r\n      />{\" \"}\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\n\r\nconst Select = (props) => {\r\n  const { name, label, error, options, ...rest } = props;\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map((option) => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = { data: {}, errors: {} };\r\n\r\n  //form validation\r\n  validate = () => {\r\n    //Joi validation\r\n    //abortEarly means -> first error -> stop validation\r\n    const options = { abortEarly: false };\r\n    //Joi.validate is not validate()\r\n    const result = Joi.validate(this.state.data, this.schema, options); //return Joi object with errors info\r\n    //also use Joi.validate result destructuring\r\n    const { error } = result;\r\n    console.log(result);\r\n    //no errors\r\n    if (!error) return null;\r\n    //else\r\n    const errors = {};\r\n    //mapping result.error into errors\r\n    for (let item of error.details) {\r\n      errors[item.path[0]] = item.message; // see from console errors[\"username\"]=\"\"username\" is not allowed to be empty\" e.c.\r\n    }\r\n    return errors;\r\n    // const errors = {};\r\n    // const { data } = this.state;\r\n    // //validation logic from Scratch (without Joi)\r\n    // if (data.username.trim() === \"\") {\r\n    //   errors.username = \"Username is required\";\r\n    // }\r\n    // if (data.password.trim() === \"\") {\r\n    //   errors.password = \"Password is required\";\r\n    // }\r\n    // // Object.keys(errors) returns keys - array of object {errors} properties\r\n    // return Object.keys(errors).length === 0 ? null : errors;\r\n  };\r\n\r\n  //property onchange validation\r\n  validateProperty = (input) => {\r\n    const { name, value } = input;\r\n    // if (name === \"username\") {\r\n    //   if (value.trim() === \"\") return \"Username is required\";\r\n    // }\r\n    // if (name === \"password\") {\r\n    //   if (value.trim() === \"\") return \"Password is required\";\r\n    // }\r\n    //JOI validation\r\n    const obj = { [name]: value }; //first argument for validate();\r\n    const schema = { [name]: this.schema[name] }; // second argument, dynamic notation\r\n    const result = Joi.validate(obj, schema); //no need of abortEarly cuz it'd too much messages\r\n    // conditional returning message from JOI object {...error{...details[{..message}]}}\r\n    return result.error ? result.error.details[0].message : null;\r\n  };\r\n\r\n  //Sunbmit Form=>validate()-> this.doSubmit();\r\n  handleSubmit = (e) => {\r\n    e.preventDefault(); //do not reload the page\r\n    //validation call\r\n    const newErrors = this.validate(); // null or {errors} object\r\n    //if no errors (null) returned from validate() then state.errors = {}\r\n    //state.errors shouldn't be nully - it will cause runtime errors\r\n    this.setState({ errors: newErrors || {} });\r\n    console.log(newErrors);\r\n    if (newErrors) return; // if there are errors then STOP submitting\r\n\r\n    //here we can Call a server or save data\r\n    this.doSubmit();\r\n  };\r\n\r\n  // when type smth in <input> => grab value and update state\r\n  //i.e. Change=>validateProperty()\r\n  handleChange = (event) => {\r\n    //destructuring of event object\r\n    const { currentTarget: input } = event; // \"event.currentTarget\" rename to \"input\"\r\n    //handle errors\r\n    const newErrors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input); //input = currentTarget\r\n    errorMessage\r\n      ? (newErrors[input.name] = errorMessage)\r\n      : delete newErrors[input.name];\r\n    //handle change, new State\r\n    const newAccount = this.state.data;\r\n    // newAccount.username = e.currentTarget.value;\r\n    // //or as we know \"newAccount.username\"  is equal to \"newAccount[\"username\"]\"\r\n    // newAccount[\"username\"] = e.currentTarget.value;\r\n    // //or for multiple inputs use object bracket notaton to change target property\r\n    newAccount[input.name] = input.value; // input.name = \"username\" or \"password\"\r\n    this.setState({ data: newAccount, errors: newErrors }); //change state -> RErender components\r\n  };\r\n\r\n  //helper RENDER methods\r\n  renderButton(label) {\r\n    return (\r\n      <button className=\"btn btn-primary\" disabled={this.validate()}>\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\", focus) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n        type={type}\r\n        focus={focus}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { getMovie, saveMovie } from \"../services/fakeMovieService\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\",\r\n    },\r\n    genres: [],\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string().required().label(\"Title\"),\r\n    genreId: Joi.string().required().label(\"Title\"),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label(\"Number in Stock\"),\r\n  };\r\n\r\n  //populate form\r\n  componentDidMount() {\r\n    const genres = getGenres();\r\n    this.setState({ genres });\r\n\r\n    const movieId = this.props.match.params.id; //read it from props of Route wrapper (wraps MovieForm)\r\n    if (movieId === \"new\") return; // in this is new movie (empty form)\r\n\r\n    const movie = getMovie(movieId);\r\n    if (!movie) return this.props.history.replace(\"/not-found\");\r\n\r\n    this.setState({ data: this.mapToViewModel(movie) });\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n    };\r\n  }\r\n\r\n  doSubmit = () => {\r\n    saveMovie(this.state.data);\r\n\r\n    this.props.history.replace(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form action=\"\" onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\", \"text\", true)}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\", \"number\")}\r\n          {/* validate() => if no errors => Button disabled=(null) i.e. false, else disabled={errors} i.e. true */}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\n\r\nclass LoginForm extends Form {\r\n  // validate(), validateProperty(), handleChange(), handleSubmit()  are from Form component\r\n\r\n  //initialize the STATE\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  //schema for Joi validation\r\n  // \"username\" and \"password\" are validated target properties\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n  //   constructor(props) {\r\n  //     super();\r\n  //     this.state = {};\r\n  //   }\r\n  /* in plain (vanilla) JS we can\r\nconst elem = document.getElementById('username');\r\nand then somewhere in our code get elem.value */\r\n  // in React we use  React.createRef() to grab actual element from DOM;\r\n  //const username = this.username.current.value;\r\n  username = React.createRef(); // create ref obj\r\n  password = React.createRef(); // create ref obj\r\n\r\n  componentDidMount() {\r\n    //this.username.current.focus();\r\n  }\r\n\r\n  doSubmit = () => {\r\n    console.log(\"Submitted\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form action=\"\" onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\", \"text\", true)}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {/* validate() => if no errors => disabled=(null) i.e. false, else disabled={errors} i.e. true */}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\n\r\n//RegisterForm -> Form -> Component from React\r\nclass RegisterForm extends Form {\r\n  state = { data: { username: \"\", password: \"\", name: \"\" }, errors: {} };\r\n\r\n  schema = {\r\n    username: Joi.string().required().email().label(\"Username\"),\r\n    password: Joi.string().min(5).required().label(\"Username\"),\r\n    nickname: Joi.string().alphanum().required().label(\"Name\"),\r\n  };\r\n\r\n  doSubmit = () => {\r\n    console.log(\"Submitted\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form action=\"\" onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\", \"text\", true)}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"nickname\", \"Name\", \"nickname\")}\r\n          {/* validate() => if no errors => disabled=(null) i.e. false, else disabled={errors} i.e. true */}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default RegisterForm;\r\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Movies from \"./components/Movies\";\nimport Customers from \"./components/Customers\";\nimport Rentals from \"./components/Rentals\";\nimport NotFoundPage from \"./components/common/notFoundPage\";\nimport NavBar from \"./components/NavBar\";\nimport MovieForm from \"./components/MovieForm\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport \"./App.css\";\n\nlet App = () => {\n  return (\n    <React.Fragment>\n      <NavBar />\n      <main className=\"container\">\n        {\" \"}\n        <Switch>\n          <Route path=\"/movies/:id\" component={MovieForm}></Route>\n          <Route path=\"/register\" component={RegisterForm}></Route>\n          <Route path=\"/login\" component={LoginForm}></Route>\n          <Route path=\"/movies\" component={Movies}></Route>\n          <Route path=\"/customers\" component={Customers}></Route>\n          <Route path=\"/rentals\" component={Rentals}></Route>\n          <Route path=\"/not-found\" component={NotFoundPage}></Route>\n          <Redirect from=\"/\" exact to=\"/movies\"></Redirect>\n          <Redirect to=\"/not-found\"></Redirect>\n        </Switch>\n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"font-awesome/css/font-awesome.min.css\"; // icons here\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}